// Code generated by protoc-gen-go. DO NOT EDIT.
// source: api.proto

/*
Package clusteror is a generated protocol buffer package.

It is generated from these files:
	api.proto

It has these top-level messages:
	ClusterDefinition
	ClusterConfigs
	ClusterStatusMsg
*/
package clusteror

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type ClusterDefinition struct {
	ClusterProvider          string          `protobuf:"bytes,1,opt,name=clusterProvider" json:"clusterProvider,omitempty"`
	ClusterConfigs           *ClusterConfigs `protobuf:"bytes,2,opt,name=clusterConfigs" json:"clusterConfigs,omitempty"`
	AutoFetchClusterProvider bool            `protobuf:"varint,3,opt,name=autoFetchClusterProvider" json:"autoFetchClusterProvider,omitempty"`
	ProviderStorePath        string          `protobuf:"bytes,4,opt,name=providerStorePath" json:"providerStorePath,omitempty"`
	CloudId                  string          `protobuf:"bytes,5,opt,name=CloudId" json:"CloudId,omitempty"`
}

func (m *ClusterDefinition) Reset()                    { *m = ClusterDefinition{} }
func (m *ClusterDefinition) String() string            { return proto.CompactTextString(m) }
func (*ClusterDefinition) ProtoMessage()               {}
func (*ClusterDefinition) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *ClusterDefinition) GetClusterProvider() string {
	if m != nil {
		return m.ClusterProvider
	}
	return ""
}

func (m *ClusterDefinition) GetClusterConfigs() *ClusterConfigs {
	if m != nil {
		return m.ClusterConfigs
	}
	return nil
}

func (m *ClusterDefinition) GetAutoFetchClusterProvider() bool {
	if m != nil {
		return m.AutoFetchClusterProvider
	}
	return false
}

func (m *ClusterDefinition) GetProviderStorePath() string {
	if m != nil {
		return m.ProviderStorePath
	}
	return ""
}

func (m *ClusterDefinition) GetCloudId() string {
	if m != nil {
		return m.CloudId
	}
	return ""
}

type ClusterConfigs struct {
	Name              string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	CloudProviderName string `protobuf:"bytes,2,opt,name=cloudProviderName" json:"cloudProviderName,omitempty"`
}

func (m *ClusterConfigs) Reset()                    { *m = ClusterConfigs{} }
func (m *ClusterConfigs) String() string            { return proto.CompactTextString(m) }
func (*ClusterConfigs) ProtoMessage()               {}
func (*ClusterConfigs) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *ClusterConfigs) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *ClusterConfigs) GetCloudProviderName() string {
	if m != nil {
		return m.CloudProviderName
	}
	return ""
}

type ClusterStatusMsg struct {
	Status string `protobuf:"bytes,1,opt,name=status" json:"status,omitempty"`
	Code   int64  `protobuf:"varint,2,opt,name=code" json:"code,omitempty"`
}

func (m *ClusterStatusMsg) Reset()                    { *m = ClusterStatusMsg{} }
func (m *ClusterStatusMsg) String() string            { return proto.CompactTextString(m) }
func (*ClusterStatusMsg) ProtoMessage()               {}
func (*ClusterStatusMsg) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *ClusterStatusMsg) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

func (m *ClusterStatusMsg) GetCode() int64 {
	if m != nil {
		return m.Code
	}
	return 0
}

func init() {
	proto.RegisterType((*ClusterDefinition)(nil), "clusteror.ClusterDefinition")
	proto.RegisterType((*ClusterConfigs)(nil), "clusteror.ClusterConfigs")
	proto.RegisterType((*ClusterStatusMsg)(nil), "clusteror.ClusterStatusMsg")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for ClusterCreator service

type ClusterCreatorClient interface {
	Create(ctx context.Context, in *ClusterDefinition, opts ...grpc.CallOption) (*ClusterStatusMsg, error)
	Apply(ctx context.Context, in *ClusterDefinition, opts ...grpc.CallOption) (*ClusterStatusMsg, error)
	Delete(ctx context.Context, in *ClusterDefinition, opts ...grpc.CallOption) (*ClusterStatusMsg, error)
}

type clusterCreatorClient struct {
	cc *grpc.ClientConn
}

func NewClusterCreatorClient(cc *grpc.ClientConn) ClusterCreatorClient {
	return &clusterCreatorClient{cc}
}

func (c *clusterCreatorClient) Create(ctx context.Context, in *ClusterDefinition, opts ...grpc.CallOption) (*ClusterStatusMsg, error) {
	out := new(ClusterStatusMsg)
	err := grpc.Invoke(ctx, "/clusteror.ClusterCreator/Create", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *clusterCreatorClient) Apply(ctx context.Context, in *ClusterDefinition, opts ...grpc.CallOption) (*ClusterStatusMsg, error) {
	out := new(ClusterStatusMsg)
	err := grpc.Invoke(ctx, "/clusteror.ClusterCreator/Apply", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *clusterCreatorClient) Delete(ctx context.Context, in *ClusterDefinition, opts ...grpc.CallOption) (*ClusterStatusMsg, error) {
	out := new(ClusterStatusMsg)
	err := grpc.Invoke(ctx, "/clusteror.ClusterCreator/Delete", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for ClusterCreator service

type ClusterCreatorServer interface {
	Create(context.Context, *ClusterDefinition) (*ClusterStatusMsg, error)
	Apply(context.Context, *ClusterDefinition) (*ClusterStatusMsg, error)
	Delete(context.Context, *ClusterDefinition) (*ClusterStatusMsg, error)
}

func RegisterClusterCreatorServer(s *grpc.Server, srv ClusterCreatorServer) {
	s.RegisterService(&_ClusterCreator_serviceDesc, srv)
}

func _ClusterCreator_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ClusterDefinition)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ClusterCreatorServer).Create(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/clusteror.ClusterCreator/Create",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ClusterCreatorServer).Create(ctx, req.(*ClusterDefinition))
	}
	return interceptor(ctx, in, info, handler)
}

func _ClusterCreator_Apply_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ClusterDefinition)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ClusterCreatorServer).Apply(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/clusteror.ClusterCreator/Apply",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ClusterCreatorServer).Apply(ctx, req.(*ClusterDefinition))
	}
	return interceptor(ctx, in, info, handler)
}

func _ClusterCreator_Delete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ClusterDefinition)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ClusterCreatorServer).Delete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/clusteror.ClusterCreator/Delete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ClusterCreatorServer).Delete(ctx, req.(*ClusterDefinition))
	}
	return interceptor(ctx, in, info, handler)
}

var _ClusterCreator_serviceDesc = grpc.ServiceDesc{
	ServiceName: "clusteror.ClusterCreator",
	HandlerType: (*ClusterCreatorServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Create",
			Handler:    _ClusterCreator_Create_Handler,
		},
		{
			MethodName: "Apply",
			Handler:    _ClusterCreator_Apply_Handler,
		},
		{
			MethodName: "Delete",
			Handler:    _ClusterCreator_Delete_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "api.proto",
}

func init() { proto.RegisterFile("api.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 303 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xa4, 0x52, 0xcd, 0x4e, 0x83, 0x40,
	0x18, 0x14, 0xda, 0xa2, 0x7c, 0x26, 0xd5, 0x7e, 0x07, 0xb3, 0xfe, 0x1c, 0x08, 0x27, 0x0e, 0x86,
	0x43, 0xbd, 0x79, 0x30, 0x69, 0xa0, 0x26, 0x1e, 0x34, 0x0d, 0x7d, 0x82, 0x15, 0xb6, 0xed, 0x26,
	0xc8, 0x92, 0x65, 0x31, 0xf1, 0xee, 0xa3, 0xfa, 0x20, 0x86, 0x65, 0xdb, 0xa6, 0x90, 0x9e, 0x7a,
	0x9b, 0xd9, 0x99, 0x9d, 0x19, 0x7e, 0xc0, 0xa5, 0x25, 0x0f, 0x4b, 0x29, 0x94, 0x40, 0x37, 0xcd,
	0xeb, 0x4a, 0x31, 0x29, 0xa4, 0xff, 0x6b, 0xc3, 0x24, 0x6a, 0x59, 0xcc, 0x56, 0xbc, 0xe0, 0x8a,
	0x8b, 0x02, 0x03, 0xb8, 0x32, 0x96, 0x85, 0x14, 0xdf, 0x3c, 0x63, 0x92, 0x58, 0x9e, 0x15, 0xb8,
	0x49, 0xf7, 0x18, 0x67, 0x30, 0x36, 0x47, 0x91, 0x28, 0x56, 0x7c, 0x5d, 0x11, 0xdb, 0xb3, 0x82,
	0xcb, 0xe9, 0x6d, 0xb8, 0xeb, 0x08, 0xa3, 0x03, 0x43, 0xd2, 0xb9, 0x80, 0xcf, 0x40, 0x68, 0xad,
	0xc4, 0x2b, 0x53, 0xe9, 0x26, 0xea, 0xb4, 0x0e, 0x3c, 0x2b, 0xb8, 0x48, 0x8e, 0xea, 0xf8, 0x08,
	0x93, 0xd2, 0xe0, 0xa5, 0x12, 0x92, 0x2d, 0xa8, 0xda, 0x90, 0xa1, 0x9e, 0xda, 0x17, 0x90, 0xc0,
	0x79, 0x94, 0x8b, 0x3a, 0x7b, 0xcb, 0xc8, 0x48, 0x7b, 0xb6, 0xd4, 0x4f, 0x60, 0x7c, 0xb8, 0x12,
	0x11, 0x86, 0x05, 0xfd, 0x62, 0xe6, 0xb9, 0x35, 0x6e, 0xda, 0xd2, 0xe6, 0xc2, 0xb6, 0xfe, 0xa3,
	0x31, 0xd8, 0x6d, 0x5b, 0x4f, 0xf0, 0x5f, 0xe0, 0xda, 0x64, 0x2e, 0x15, 0x55, 0x75, 0xf5, 0x5e,
	0xad, 0xf1, 0x06, 0x9c, 0x4a, 0x13, 0x93, 0x6b, 0x58, 0xd3, 0x96, 0x8a, 0xac, 0x0d, 0x1b, 0x24,
	0x1a, 0x4f, 0xff, 0xac, 0xfd, 0x28, 0xc9, 0xa8, 0x12, 0x12, 0xe7, 0xe0, 0x68, 0xc8, 0xf0, 0xa1,
	0xff, 0x7e, 0xf7, 0xdf, 0xef, 0xee, 0xbe, 0xaf, 0xee, 0x36, 0xf8, 0x67, 0x18, 0xc3, 0x68, 0x56,
	0x96, 0xf9, 0xcf, 0x69, 0x29, 0x73, 0x70, 0x62, 0x96, 0xb3, 0x13, 0xc7, 0x7c, 0x3a, 0xfa, 0x9f,
	0x7c, 0xfa, 0x0f, 0x00, 0x00, 0xff, 0xff, 0x84, 0xa3, 0x0a, 0xfb, 0xa0, 0x02, 0x00, 0x00,
}
